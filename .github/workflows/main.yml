on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

 

name: Build and push a docker image

 

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

 

    steps:
    - name: Checkout
      uses: actions/checkout@v2

 

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

 

        aws-region: us-east-2

 

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1


    - name: "Create devlopment environments namespace"
      uses: okteto/create-namespace@latest
      with:
        namespace: springv1


    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: kiran-ecr
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and push it to ECR
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

 
 
    
    
    - name: deploy to cluster
      uses: kodermax/kubectl-aws-eks@master
      env:
        KUBECTL_VERSION: "v1.22.0"
        IAM_VERSION: "0.5.6"
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: kiran-ecr
        IMAGE_TAG: ${{ github.sha }}
      with:
        args: set image deployment/my-app spring=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -n springv1
        
    - name: verify deployment
      uses: kodermax/kubectl-aws-eks@master
      env:
        KUBECTL_VERSION: "v1.22.0"
        IAM_VERSION: "0.5.6"
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
        args: rollout status deployment/my-app -n springv1


    - name: Deploy image to Amazon EKS
      run: |
        
        kubectl apply -f eks/deployment.yml
        kubectl apply -f eks/service.yml
